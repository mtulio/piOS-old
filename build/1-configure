#!/bin/bash
#
# 1-configure - Script to configure build process. Here
#	you could enable flags, features, etc
#	Configuration file will be saved in .build.cfg
#
# author: Marco Tulio R Braga (https://github.com/mtulio/piOS)
# created: 04 Aug 2015
# modified: 04 Aug 2015
#
#######################################

#######################################
# Show usage script
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   Help message
#######################################
usage() {
  #echo "Help Function $0 : $*"
  [ "$*" ] && echo " You entered	: $0 $*"
  #sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0"
  echo " Usage		: $0 --FLAG=OPTIONS --enable-FEATURE"
  echo " '-> Available FLAGS and OPTIONS: "
  echo " '--> --version=[A|B] : Version of your Raspberry Pi"
  echo " '"
  echo " '-> Available FEATURE: "
  echo " '--> --enable-gui : Enable Linux X Window XFCE"
  exit 2
} 2>/dev/null


#######################################
# Main - Start script
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   File .build.cfg
#######################################
#TODO(mtulio) : create kernel build menu, and its function
#TODO(mtulio) : define envs in .build.cfg
main() {

  GET_OPTS=$(getopt -o hiev: --long help,install,export,version: -n "$0" -- "$@")
  if [ $? != 0 ] ; then usage; exit 2 ; fi
  eval set -- "${GET_OPTS}"

  FLAG_INSTALL=false
  FLAG_EXPORT=false
  while true
  do
    case "$1" in
      -h|--help) usage; shift;;
      -k|--enable-kernel) FLAG_BKERNEL=true; shift;;
      -a|--enable-app01) FLAG_BAPP01=true; shift;;
      -b|--board) FLAG_PIBOARD="$2"; shift 2;;
      -- ) shift; break;;
      * ) break;;
    esac
  done
}

main $@;
